// <auto-generated />
using System;
using ChatSupportApi.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatSupportApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240622172805_MarkAgentOverflow")]
    partial class MarkAgentOverflow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("ChatSupportApi.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailableDuringPeakHours")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Seniority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shift")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            IsAvailableDuringPeakHours = false,
                            Name = "Senior Test Agent",
                            Seniority = 2,
                            Shift = 0
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            IsAvailableDuringPeakHours = false,
                            Name = "Junior Test Agent",
                            Seniority = 0,
                            Shift = 0
                        });
                });

            modelBuilder.Entity("ChatSupportApi.Models.ChatSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedAgentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOverflow")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPolledTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAgentId");

                    b.ToTable("ChatSessions");
                });

            modelBuilder.Entity("ChatSupportApi.Models.ChatSession", b =>
                {
                    b.HasOne("ChatSupportApi.Models.Agent", "AssignedAgent")
                        .WithMany()
                        .HasForeignKey("AssignedAgentId");

                    b.Navigation("AssignedAgent");
                });
#pragma warning restore 612, 618
        }
    }
}
